/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProposalToken,
  ProposalTokenInterface,
} from "../../contracts/ProposalToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_info",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "whoChanged",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "ValueChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "getInfo",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newValue",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e7438038062000e7483398181016040528101906200003791906200036f565b8160018190555080600290816200004f919062000616565b5032600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000c27f2f2949ab00000000000000000000000000000000000000000000000000000000620000ca60201b60201c565b505062000780565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160362000135576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200012c906200075e565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b620001ca81620001b5565b8114620001d657600080fd5b50565b600081519050620001ea81620001bf565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200024582620001fa565b810181811067ffffffffffffffff821117156200026757620002666200020b565b5b80604052505050565b60006200027c620001a1565b90506200028a82826200023a565b919050565b600067ffffffffffffffff821115620002ad57620002ac6200020b565b5b620002b882620001fa565b9050602081019050919050565b60005b83811015620002e5578082015181840152602081019050620002c8565b60008484015250505050565b60006200030862000302846200028f565b62000270565b905082815260208101848484011115620003275762000326620001f5565b5b62000334848285620002c5565b509392505050565b600082601f830112620003545762000353620001f0565b5b815162000366848260208601620002f1565b91505092915050565b60008060408385031215620003895762000388620001ab565b5b60006200039985828601620001d9565b925050602083015167ffffffffffffffff811115620003bd57620003bc620001b0565b5b620003cb858286016200033c565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200042857607f821691505b6020821081036200043e576200043d620003e0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004a87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000469565b620004b4868362000469565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620004f7620004f1620004eb84620001b5565b620004cc565b620001b5565b9050919050565b6000819050919050565b6200051383620004d6565b6200052b6200052282620004fe565b84845462000476565b825550505050565b600090565b6200054262000533565b6200054f81848462000508565b505050565b5b8181101562000577576200056b60008262000538565b60018101905062000555565b5050565b601f821115620005c657620005908162000444565b6200059b8462000459565b81016020851015620005ab578190505b620005c3620005ba8562000459565b83018262000554565b50505b505050565b600082821c905092915050565b6000620005eb60001984600802620005cb565b1980831691505092915050565b6000620006068383620005d8565b9150826002028217905092915050565b6200062182620003d5565b67ffffffffffffffff8111156200063d576200063c6200020b565b5b6200064982546200040f565b620006568282856200057b565b600060209050601f8311600181146200068e576000841562000679578287015190505b620006858582620005f8565b865550620006f5565b601f1984166200069e8662000444565b60005b82811015620006c857848901518255600182019150602085019450602081019050620006a1565b86831015620006e85784890151620006e4601f891682620005d8565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000600082015250565b600062000746601c83620006fd565b915062000753826200070e565b602082019050919050565b60006020820190508181036000830152620007798162000737565b9050919050565b6106e480620007906000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c578063209652551461008c57806355241077146100aa5780635a9b0b89146100c65780638da5cb5b146100e4575b600080fd5b610076600480360381019061007191906103e4565b610102565b604051610083919061042c565b60405180910390f35b610094610179565b6040516100a19190610460565b60405180910390f35b6100c460048036038101906100bf91906104a7565b610183565b005b6100ce610261565b6040516100db9190610564565b60405180910390f35b6100ec6102f3565b6040516100f991906105c7565b60405180910390f35b600061010d8261031d565b806101725750600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff165b9050919050565b6000600154905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610213576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020a9061062e565b60405180910390fd5b80600181905550803373ffffffffffffffffffffffffffffffffffffffff167fe2b64d6eb95e02b6354c9dad0f0b75f05c8659bc5f2a0f91bc457fc27c55c68860405160405180910390a350565b6060600280546102709061067d565b80601f016020809104026020016040519081016040528092919081815260200182805461029c9061067d565b80156102e95780601f106102be576101008083540402835291602001916102e9565b820191906000526020600020905b8154815290600101906020018083116102cc57829003601f168201915b5050505050905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6103c18161038c565b81146103cc57600080fd5b50565b6000813590506103de816103b8565b92915050565b6000602082840312156103fa576103f9610387565b5b6000610408848285016103cf565b91505092915050565b60008115159050919050565b61042681610411565b82525050565b6000602082019050610441600083018461041d565b92915050565b6000819050919050565b61045a81610447565b82525050565b60006020820190506104756000830184610451565b92915050565b61048481610447565b811461048f57600080fd5b50565b6000813590506104a18161047b565b92915050565b6000602082840312156104bd576104bc610387565b5b60006104cb84828501610492565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561050e5780820151818401526020810190506104f3565b60008484015250505050565b6000601f19601f8301169050919050565b6000610536826104d4565b61054081856104df565b93506105508185602086016104f0565b6105598161051a565b840191505092915050565b6000602082019050818103600083015261057e818461052b565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105b182610586565b9050919050565b6105c1816105a6565b82525050565b60006020820190506105dc60008301846105b8565b92915050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b60006106186015836104df565b9150610623826105e2565b602082019050919050565b600060208201905081810360008301526106478161060b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061069557607f821691505b6020821081036106a8576106a761064e565b5b5091905056fea264697066735822122028e5dfb4d206f3b2925ea2a0d0a7216bda9fcfc0929ddfdb783aebd9322fa49b64736f6c63430008130033";

type ProposalTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProposalTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProposalToken__factory extends ContractFactory {
  constructor(...args: ProposalTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _value: BigNumberish,
    _info: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_value, _info, overrides || {});
  }
  override deploy(
    _value: BigNumberish,
    _info: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_value, _info, overrides || {}) as Promise<
      ProposalToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProposalToken__factory {
    return super.connect(runner) as ProposalToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProposalTokenInterface {
    return new Interface(_abi) as ProposalTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProposalToken {
    return new Contract(address, _abi, runner) as unknown as ProposalToken;
  }
}
